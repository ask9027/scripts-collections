#!/bin/sh

RED='\e[31m'
GREEN='\e[32m'
BLUE='\e[34m'
RESET='\e[0m'

check_server(){
	if [ ! -z "$(pidof app_process)" ]; then
		local server_pid=$(pidof app_process)
		printf "${RED}XServer is Already running at ${server_pid}"; echo
		printf "${BLUE}Terminating XServer of ${server_pid}$(kill $server_pid)${RESET}"; echo
	fi
}

set_env(){
	export TMPDIR=/data/local/tmp/ubuntu/tmp
	export TERMUX_X11_DEBUG=1
	export XKB_CONFIG_ROOT=/data/local/tmp/ubuntu/usr/share/X11/xkb
	export CLASSPATH=$(/system/bin/pm path com.termux.x11 | cut -d: -f2)
}

run_as_root(){
    local enforce="setenforce 1"
    local permissive="setenforce 0"
    local getenforce="getenforce"

    echo -e "${BLUE}Running Termux-x11 as root${RESET}"
    echo -e "${RED}SELinux is $($getenforce)${RESET}"
    echo -e "${RED}setting up SELinux to $($permissive)$($getenforce)${RESET}"

    /system/bin/app_process / com.termux.x11.CmdEntryPoint :0

    echo -e "${RED}setting up SELinux to $($enforce)$($getenforce)${RESET}"
}

trap ctrl_c INT

ctrl_c(){
    echo ""
    clear_tmp
    printf "${GREEN}Leaving...${RESET}"; echo
}

clear_tmp(){
    echo -e "${BLUE}Clearing tmp dir"
    rm -rf ${TMPDIR}/{.*,*}
}

echo -e "Clear old logcat$(logcat -c)"
check_server
set_env
clear_tmp
run_as_root
