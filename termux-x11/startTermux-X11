#!/bin/bash
set -e
REDB=`tput setab 124`
GREEN=`tput setaf 2`
BLUE=`tput setaf 4`
CYAN=`tput setaf 012`
RESET=`tput sgr0`

trap ctrl_c INT
export TERMUX_X11_DEBUG=1
user=$1
x11repo="${PREFIX}/etc/apt/sources.list.d/x11.list"
x11="/data/data/com.termux/files/usr/bin/termux-x11 -ac :0"

function ctrl_c(){
    echo ""
    clear_tmp
    printf "${GREEN}Leaving...${RESET}"; echo
}

function clear_tmp(){
    echo -e "${BLUE}Clearing tmp dir"
    if command -v sudo &> /dev/null; then
        sudo rm -rf ${TMPDIR}/{.*,*}
    else
        rm -rf ${TMPDIR}/{.*,*}
    fi
}

function start_audio(){
    echo -e "${CYAN}Starting pulseaudio"
    pulseaudio --start --load="module-native-protocol-tcp auth-ip-acl=127.0.0.1 auth-anonymous=1" --exit-idle-time=-1
}

function checkPulse(){
    if ! command -v pulseaudio &> /dev/null; then
	echo "Pulse audio not installed"
	echo "Installing pulseaudio now..."
        apt update && apt install pulseaudio -y
	start_audio
    else
	start_audio
    fi
}

function run_as_root(){
    enforce="su -c setenforce 1"
    permissive="su -c setenforce 0"
    getenforce="su -c getenforce"

    echo "${BLUE}Running Termux-x11 as root${RESET}"
    echo -e "${REDB}SELinux is $($getenforce)${RESET}"
    echo -e "${REDB}setting up SELinux to $($permissive)$($getenforce)${RESET}"

    su -c $x11
    echo ""
    echo -e "${REDB}setting up SELinux to $($enforce)$($getenforce)${RESET}"
    ctrl_c
}

function startX11(){
    if [[ ! -z ${user} && ${user} -eq 0 ]]; then
        run_as_root
    else
        echo "${BLUE}Running Termux-x11 as non-root${RESET}"
        $x11
    fi
}
function checkX11Repo(){
    if [ ! -f $x11repo ]; then
        echo "${REDB}x11-repo is not enabled, enabling now...${RESET}"
        apt update && apt install x11-repo -y
	checkTermuxX11
    else
        checkTermuxX11
    fi
}

function checkTermuxX11(){
    if ! command -v termux-x11 &> /dev/null; then
        echo "${REDB}Termux-x11 not installed${RESET}"
        echo "Installing it now..."
        apt update && apt install termux-x11-nightly -y
        startX11
    else
        startX11
    fi
}

echo -e "${REDB}Clearing old logcat$(logcat -c)${RESET}"
clear_tmp
checkPulse
echo -e "${GREEN}Starting Termux-x11${RESET}"
checkX11Repo
