#!/bin/bash
set -e
REDB=$(tput setab 124)
GREEN=$(tput setaf 2)
BLUE=$(tput setaf 4)
CYAN=$(tput setaf 012)
RESET=$(tput sgr0)

trap ctrl_c INT
extra=$1
export TERMUX_X11_DEBUG=1 
x11repo="${PREFIX}/etc/apt/sources.list.d/x11.list"
x11="${PREFIX}/bin/termux-x11 :0"

check_server(){
    if [ ! -z "$(pidof app_process)" ]; then
    	local server_pid=$(pidof app_process)
        printf "${RED}XServer is Already running at ${server_pid}"; echo
        printf "${BLUE}Terminating XServer of ${server_pid}$(kill $server_pid)${RESET}"; echo
    fi
}

function ctrl_c() {
    echo ""
    clear_tmp
    printf "${GREEN}Leaving...${RESET}"
    echo
}

function clear_tmp() {
    echo -e "${BLUE}Clearing tmp dir"
    rm -rf ${TMPDIR}/{.*,*}
}

function start_audio() {
    echo -e "${CYAN}Starting pulseaudio"
    pulseaudio --start --load="module-native-protocol-tcp auth-ip-acl=127.0.0.1 auth-anonymous=1" --exit-idle-time=-1
}

function checkPulse() {
    if ! command -v pulseaudio &>/dev/null; then
        echo "Pulse audio not installed"
        echo "Installing pulseaudio now..."
        apt update && apt install pulseaudio -y
        start_audio
    else
        start_audio
    fi
}

function startX11() {
    echo "${BLUE}Running Termux-x11 as non-root${RESET}"
    if [ ! -z "$extra" ]; then
        $x11 $extra
    else
        $x11
    fi
}

function checkX11Repo() {
    if [ ! -f $x11repo ]; then
        echo "${REDB}x11-repo is not enabled, enabling now...${RESET}"
        apt update && apt install x11-repo -y
        checkTermuxX11
    else
        checkTermuxX11
    fi
}

function checkTermuxX11() {
    if ! command -v termux-x11 &>/dev/null; then
        echo "${REDB}Termux-x11 not installed${RESET}"
        echo "Installing it now..."
        apt update && apt install termux-x11-nightly -y
        startX11
    else
        startX11
    fi
}

echo -e "${REDB}Clearing old logcat$(logcat -c)${RESET}"
check_server
clear_tmp
checkPulse
echo -e "${GREEN}Starting Termux-x11${RESET}"
checkX11Repo
